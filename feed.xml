<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-09-19T12:38:08+08:00</updated><id>http://localhost:4000/</id><title type="html">code example By cs.xieyonghui.com</title><subtitle>code example By cs.xieyonghui.com</subtitle><entry><title type="html">Thread,Executors,ForkJoinPool,Actor Example</title><link href="http://localhost:4000/thread-executors-forkjoinpool-actor.html" rel="alternate" type="text/html" title="Thread,Executors,ForkJoinPool,Actor Example" /><published>2018-09-10T18:35:00+08:00</published><updated>2018-09-10T18:35:00+08:00</updated><id>http://localhost:4000/thread-executors-forkjoinpool-actor</id><content type="html" xml:base="http://localhost:4000/thread-executors-forkjoinpool-actor.html">&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RecursiveAction;

public class ForkJoinConcurrent {

	public static void main(String[] args) throws InterruptedException, ExecutionException {
		ForkJoinPool fjp = new ForkJoinPool();
		List uid = new ArrayList();
		for(int i = 1;i&amp;lt; 1001;i++) {
			uid.add(&quot;user id:&quot;+i);
		}
		System.out.println(uid.size());
		fjp.submit(new TaskUnit(0,1000,(st,et)-&amp;gt;{
			
			System.out.println(st+&quot;:&quot;+et);
			
			List suid = uid.subList(st,et);
			//service.find(suid);
			
		})).get();
		
		
	}
	
	static class TaskUnit extends  RecursiveAction{
		
		private final int unit = 10;
		
		private int st;
		
		private int et;
		
		private Callback c;
		
		public TaskUnit(int st,int et,Callback c) {
			this.st = st;
			this.et = et;
			this.c = c;
		}

		@Override
		protected void compute() {
			if(et - st &amp;lt; unit){
				c.call(st, et);
			}else {
				int middle =(st+et)/2;
				TaskUnit l = new TaskUnit(st, middle,c);
				TaskUnit r = new TaskUnit(middle, et,c);
	            l.fork();
	            r.fork();
	        	l.join();
	    		r.join();
			}
		}
		
	}
	
	static interface Callback {
		
		public void call(int st,int et);
		
	}

}
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">```Java import java.util.ArrayList; import java.util.List; import java.util.concurrent.ExecutionException; import java.util.concurrent.ForkJoinPool; import java.util.concurrent.RecursiveAction;</summary></entry><entry><title type="html">ReentrantLock Demo</title><link href="http://localhost:4000/reentrant-lock.html" rel="alternate" type="text/html" title="ReentrantLock Demo" /><published>2018-09-10T18:35:00+08:00</published><updated>2018-09-10T18:35:00+08:00</updated><id>http://localhost:4000/reentrant-lock</id><content type="html" xml:base="http://localhost:4000/reentrant-lock.html">&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;

public class RL {

	public static void main(String[] args) throws InterruptedException {
		ReentrantLock lock = new ReentrantLock();
		System.out.println(&quot;1:&quot;+lock.getHoldCount()+&quot;-&amp;gt;1-1:&quot;+lock.isHeldByCurrentThread());//1:0-&amp;gt;1-1:false
		lock.lock();
		
		//other thread
		new Thread(()-&amp;gt;{
			//try lock
			System.out.println(&quot;other thread tryLock:&quot;+lock.tryLock());//other thread tryLock:false
			try {
				System.out.println(&quot;other thread tryLock wait:&quot;+lock.tryLock(1000,TimeUnit.SECONDS));//other thread tryLock wait:true
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}).start();
		
		//wait for other thread
		Object o = new Object();
		synchronized (o) {
			o.wait(10000);
		}
		
		System.out.println(&quot;2:&quot;+lock.getHoldCount()+&quot;-&amp;gt;2-1:&quot;+lock.isHeldByCurrentThread());//2:1-&amp;gt;2-1:true
		lock.lock();
		System.out.println(&quot;3:&quot;+lock.getHoldCount());//3:2
		lock.unlock();
		System.err.println(&quot;4:&quot;+lock.getHoldCount());//4:1
		lock.unlock();
		System.err.println(&quot;5:&quot;+lock.getHoldCount());//5:0
		
	}

}
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">```Java import java.util.concurrent.TimeUnit; import java.util.concurrent.locks.ReentrantLock;</summary></entry><entry><title type="html">ReentrantLock Condition Demo</title><link href="http://localhost:4000/reentrant-lock-condition.html" rel="alternate" type="text/html" title="ReentrantLock Condition Demo" /><published>2018-09-10T18:35:00+08:00</published><updated>2018-09-10T18:35:00+08:00</updated><id>http://localhost:4000/reentrant-lock-condition</id><content type="html" xml:base="http://localhost:4000/reentrant-lock-condition.html">&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;iimport java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

public class RLCondition {
	
	public static void main(String ... strings) throws InterruptedException {
		ReentrantLock lock = new ReentrantLock();
		Condition a = lock.newCondition();
		Condition b = lock.newCondition();
		
		new Thread(()-&amp;gt;{
			lock.lock();
			a.signal();
			lock.unlock();
			
			lock.lock();
			try {
				b.await();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			lock.unlock();
			System.out.println(&quot;other pass&quot;);
			
		}).start();
		
		lock.lock();
		a.await();
		lock.unlock();
		
		lock.lock();
		b.signal();
		lock.unlock();
		
		System.out.println(&quot;pass&quot;);
	}

}
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">```Java iimport java.util.concurrent.locks.Condition; import java.util.concurrent.locks.ReentrantLock;</summary></entry><entry><title type="html">JavaScript Inheritance Prototype</title><link href="http://localhost:4000/javascript.html" rel="alternate" type="text/html" title="JavaScript Inheritance Prototype" /><published>2018-07-29T20:35:00+08:00</published><updated>2018-07-29T20:35:00+08:00</updated><id>http://localhost:4000/javascript</id><content type="html" xml:base="http://localhost:4000/javascript.html">&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Panda&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Panda&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Panda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'eat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ext'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Dog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;po&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Panda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;po&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Bamboo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Panda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'beef'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">```javascript Function.prototype.method = function(k,v){ this.prototype[k]=v; return this; }</summary></entry><entry><title type="html">jOOQ Configeration</title><link href="http://localhost:4000/jooq-pom-config.html" rel="alternate" type="text/html" title="jOOQ Configeration" /><published>2018-07-15T14:08:44+08:00</published><updated>2018-07-15T14:08:44+08:00</updated><id>http://localhost:4000/jooq-pom-config</id><content type="html" xml:base="http://localhost:4000/jooq-pom-config.html">&lt;pre&gt;&lt;code class=&quot;language-XML&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

	&amp;lt;groupId&amp;gt;com.xieyonghui&amp;lt;/groupId&amp;gt;
	&amp;lt;artifactId&amp;gt;demo&amp;lt;/artifactId&amp;gt;
	&amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
	&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;

	&amp;lt;name&amp;gt;cs&amp;lt;/name&amp;gt;
	&amp;lt;description&amp;gt;Demo project for Spring Boot&amp;lt;/description&amp;gt;

	&amp;lt;parent&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
		&amp;lt;version&amp;gt;2.0.3.RELEASE&amp;lt;/version&amp;gt;
		&amp;lt;relativePath /&amp;gt; &amp;lt;!-- lookup parent from repository --&amp;gt;
	&amp;lt;/parent&amp;gt;

	&amp;lt;properties&amp;gt;
		&amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
		&amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt;
		&amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
	&amp;lt;/properties&amp;gt;

	&amp;lt;dependencies&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;spring-boot-starter-jdbc&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;spring-boot-starter-thymeleaf&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.jooq&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;jooq&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.jooq&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;jooq-meta&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.jooq&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;jooq-codegen&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;8.0.11&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
			&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
		&amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;

	&amp;lt;build&amp;gt;
		&amp;lt;plugins&amp;gt;
			&amp;lt;plugin&amp;gt;
				&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
				&amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
			&amp;lt;/plugin&amp;gt;
			&amp;lt;plugin&amp;gt;
				&amp;lt;groupId&amp;gt;org.jooq&amp;lt;/groupId&amp;gt;
				&amp;lt;artifactId&amp;gt;jooq-codegen-maven&amp;lt;/artifactId&amp;gt;
				&amp;lt;executions&amp;gt;
			        &amp;lt;execution&amp;gt;
			            &amp;lt;phase&amp;gt;generate-sources&amp;lt;/phase&amp;gt;
			            &amp;lt;goals&amp;gt;
			                &amp;lt;goal&amp;gt;generate&amp;lt;/goal&amp;gt;
			            &amp;lt;/goals&amp;gt;
			        &amp;lt;/execution&amp;gt;
			    &amp;lt;/executions&amp;gt;
				&amp;lt;dependencies&amp;gt;
					&amp;lt;dependency&amp;gt;
						&amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
						&amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
						&amp;lt;version&amp;gt;8.0.11&amp;lt;/version&amp;gt;
					&amp;lt;/dependency&amp;gt;
				&amp;lt;/dependencies&amp;gt;
				&amp;lt;configuration&amp;gt;
					&amp;lt;jdbc&amp;gt;
						&amp;lt;driver&amp;gt;com.mysql.cj.jdbc.Driver&amp;lt;/driver&amp;gt;
						&amp;lt;url&amp;gt;&amp;lt;![CDATA[jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&amp;amp;serverTimezone=UTC&amp;amp;characterEncoding=UTF-8&amp;amp;useSSL=false]]&amp;gt;&amp;lt;/url&amp;gt;
						&amp;lt;user&amp;gt;root&amp;lt;/user&amp;gt;
						&amp;lt;password&amp;gt;123456&amp;lt;/password&amp;gt;
					&amp;lt;/jdbc&amp;gt;
					&amp;lt;generator&amp;gt;
			            &amp;lt;database&amp;gt;
			            	&amp;lt;name&amp;gt;org.jooq.util.mysql.MySQLDatabase&amp;lt;/name&amp;gt;
			                &amp;lt;includes&amp;gt;.*&amp;lt;/includes&amp;gt;
			                &amp;lt;inputSchema&amp;gt;cs&amp;lt;/inputSchema&amp;gt;
			                &amp;lt;overridePrimaryKeys&amp;gt;id&amp;lt;/overridePrimaryKeys&amp;gt;
			                &amp;lt;properties&amp;gt;
						        &amp;lt;property&amp;gt;
						          &amp;lt;key&amp;gt;dialect&amp;lt;/key&amp;gt;
						          &amp;lt;value&amp;gt;MYSQL&amp;lt;/value&amp;gt;
						        &amp;lt;/property&amp;gt;
						      &amp;lt;/properties&amp;gt;
			            &amp;lt;/database&amp;gt;
			            &amp;lt;target&amp;gt;
			                &amp;lt;packageName&amp;gt;com.xieyonghui.demo.dto.jooq&amp;lt;/packageName&amp;gt;
			                &amp;lt;directory&amp;gt;/src/main/java&amp;lt;/directory&amp;gt;
			            &amp;lt;/target&amp;gt;
			        &amp;lt;/generator&amp;gt;
				&amp;lt;/configuration&amp;gt;
			&amp;lt;/plugin&amp;gt;
		&amp;lt;/plugins&amp;gt;
	&amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">```XML 4.0.0</summary></entry><entry><title type="html">jOOQ java fragment</title><link href="http://localhost:4000/jooq-java-code.html" rel="alternate" type="text/html" title="jOOQ java fragment" /><published>2018-07-15T14:08:44+08:00</published><updated>2018-07-15T14:08:44+08:00</updated><id>http://localhost:4000/jooq-java-code</id><content type="html" xml:base="http://localhost:4000/jooq-java-code.html">&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;@Component
public class ArticleDao  {

	private final DSLContext dc;

	private final Article art = Article.ARTICLE;

	public ArticleDao(DSLContext dslContext) {
		dc = dslContext;
	}
	
	public List&amp;lt;Article&amp;gt; select(String auth){
		return dc.select(art.ID,art.CONTENT).from(art).where(art.AUTH.eq(auth)).fetch().into(Article.class);
	}
	
}

&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">```Java @Component public class ArticleDao {</summary></entry><entry><title type="html">Welcome to Xie Yonghui Blog!</title><link href="http://localhost:4000/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Xie Yonghui Blog!" /><published>2018-07-15T12:36:44+08:00</published><updated>2018-07-15T12:36:44+08:00</updated><id>http://localhost:4000/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>